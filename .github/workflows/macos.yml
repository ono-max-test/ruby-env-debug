name: macOS
on:
  push:
    paths-ignore:
      - 'doc/**'
      - '**/man'
      - '**.md'
      - '**.rdoc'
      - '**/.document'
      - '.*.yml'
  pull_request:
    # Do not use paths-ignore for required status checks
    # https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/collaborating-on-repositories-with-code-quality-features/troubleshooting-required-status-checks#handling-skipped-but-required-checks
  merge_group:

env:
  # GITHUB_PULL_REQUEST_URL are used for commenting test reports in Launchable Github App.
  # https://github.com/launchableinc/cli/blob/v1.80.1/launchable/utils/link.py#L42
  GITHUB_PULL_REQUEST_URL: ${{ github.event.pull_request.html_url }}
  # The following envs are necessary in Launchable tokenless authentication.
  # https://github.com/launchableinc/cli/blob/v1.80.1/launchable/utils/authentication.py#L20
  LAUNCHABLE_ORGANIZATION: ${{ github.repository_owner }}
  LAUNCHABLE_WORKSPACE: ${{ github.event.repository.name }}
  # https://github.com/launchableinc/cli/blob/v1.80.1/launchable/utils/authentication.py#L71
  GITHUB_PR_HEAD_SHA: ${{ github.event.pull_request.head.sha || github.sha }}
  # This setting only needs for forked repositories from the ruby/ruby.
  LAUNCHABLE_TOKEN: ${{ secrets.LAUNCHABLE_TOKEN }}

concurrency:
  group: ${{ github.workflow }} / ${{ startsWith(github.event_name, 'pull') && github.ref_name || github.sha }}
  cancel-in-progress: ${{ startsWith(github.event_name, 'pull') }}

permissions:
  contents: read

jobs:
  make:
    strategy:
      matrix:
        test_task: ['check']
        configure: ['']
        os: ${{ fromJSON(format('["macos-12","macos-13"{0}]', (github.repository == 'ruby/ruby' && ',"macos-arm-oss"' || ''))) }}
        include:
          - test_task: test-all
            os: ${{ github.repository == 'ruby/ruby' && 'macos-arm-oss' || 'macos-13' }}
          - test_task: test-bundled-gems
            os: ${{ github.repository == 'ruby/ruby' && 'macos-arm-oss' || 'macos-13' }}
      fail-fast: false

    env:
      GITPULLOPTIONS: --no-tags origin ${{ github.ref }}

    runs-on: ${{ matrix.os }}

    if: >-
      ${{!(false
      || contains(github.event.head_commit.message, '[DOC]')
      || contains(github.event.pull_request.title, '[DOC]')
      || contains(github.event.pull_request.labels.*.name, 'Documentation')
      || (github.event_name == 'push' && github.actor == 'dependabot[bot]')
      )}}

    steps:
      - name: Print values for debugging 1
        run: |
            echo "github.event_name=${{ github.event_name }}"
            echo "GITHUB_HEAD_REF=$GITHUB_HEAD_REF"
            echo "GITHUB_BASE_REF=$GITHUB_BASE_REF"
            echo "----- Output for 'git show-ref' -----"
        working-directory:

      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          sparse-checkout-cone-mode: false
          sparse-checkout: /.github
          # Set fetch-depth: 0 so that Launchable can receive commits information.
          fetch-depth: 0

      - name: Install libraries
        uses: ./.github/actions/setup/macos

      - uses: ./.github/actions/setup/directories
        with:
          srcdir: src
          builddir: build
          makeup: true
          dummy-files: ${{ matrix.test_task == 'check' }}

      - name: Run configure
        run: ../src/configure -C --disable-install-doc ${{ matrix.configure }}

      - run: make prepare-gems
        if: ${{ matrix.test_task == 'test-bundled-gems' }}

      - run: make

      - name: Print values for debugging 2
        run: |
            echo "github.event_name=${{ github.event_name }}"
            echo "GITHUB_HEAD_REF=$GITHUB_HEAD_REF"
            echo "GITHUB_BASE_REF=$GITHUB_BASE_REF"
            echo "----- Output for 'git show-ref' -----"
            git show-ref
        working-directory:

  result:
    if: ${{ always() }}
    name: ${{ github.workflow }} result
    runs-on: macos-latest
    needs: [make]
    steps:
      - run: exit 1
        if: ${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') }}

defaults:
  run:
    working-directory: build
